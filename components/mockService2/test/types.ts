// This file is auto generated by grpc-code-gen, do not edit!
// tslint:disable
export namespace common {
  export interface Pager {
    /** 页码 */
    'page'?: string;
    /** 页数 */
    'page_size'?: string;
    /** 总行数 */
    'total_rows'?: string;
  }


  export interface Request {
  }


  export interface Response {
  }


}
export namespace google {
  export namespace protobuf {
    export interface DescriptorProto {
      'name'?: string;
      'field'?: google.protobuf.FieldDescriptorProto[];
      'extension'?: google.protobuf.FieldDescriptorProto[];
      'nested_type'?: google.protobuf.DescriptorProto[];
      'enum_type'?: google.protobuf.EnumDescriptorProto[];
      'extension_range'?: google.protobuf.DescriptorProto.ExtensionRange[];
      'oneof_decl'?: google.protobuf.OneofDescriptorProto[];
      'options'?: google.protobuf.MessageOptions;
      'reserved_range'?: google.protobuf.DescriptorProto.ReservedRange[];
      'reserved_name'?: string[];
    }


    export interface EnumDescriptorProto {
      'name'?: string;
      'value'?: google.protobuf.EnumValueDescriptorProto[];
      'options'?: google.protobuf.EnumOptions;
    }


    export interface EnumOptions {
      'allow_alias'?: boolean;
      'deprecated'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
      '.gogoproto.goproto_enum_prefix'?: boolean;
      '.gogoproto.goproto_enum_stringer'?: boolean;
      '.gogoproto.enum_stringer'?: boolean;
      '.gogoproto.enum_customname'?: string;
      '.gogoproto.enumdecl'?: boolean;
    }


    export interface EnumValueDescriptorProto {
      'name'?: string;
      'number'?: number;
      'options'?: google.protobuf.EnumValueOptions;
    }


    export interface EnumValueOptions {
      'deprecated'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
      '.gogoproto.enumvalue_customname'?: string;
    }


    export interface FieldDescriptorProto {
      'name'?: string;
      'number'?: number;
      'label'?: google.protobuf.FieldDescriptorProto.Label;
      'type'?: google.protobuf.FieldDescriptorProto.Type;
      'type_name'?: string;
      'extendee'?: string;
      'default_value'?: string;
      'oneof_index'?: number;
      'json_name'?: string;
      'options'?: google.protobuf.FieldOptions;
    }


    export interface FieldOptions {
      'ctype'?: google.protobuf.FieldOptions.CType;
      'packed'?: boolean;
      'jstype'?: google.protobuf.FieldOptions.JSType;
      'lazy'?: boolean;
      'deprecated'?: boolean;
      'weak'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
      '.gogoproto.nullable'?: boolean;
      '.gogoproto.embed'?: boolean;
      '.gogoproto.customtype'?: string;
      '.gogoproto.customname'?: string;
      '.gogoproto.jsontag'?: string;
      '.gogoproto.moretags'?: string;
      '.gogoproto.casttype'?: string;
      '.gogoproto.castkey'?: string;
      '.gogoproto.castvalue'?: string;
      '.gogoproto.stdtime'?: boolean;
      '.gogoproto.stdduration'?: boolean;
      '.gogoproto.wktpointer'?: boolean;
    }


    export interface FileDescriptorProto {
      'name'?: string;
      'package'?: string;
      'dependency'?: string[];
      'public_dependency'?: number[];
      'weak_dependency'?: number[];
      'message_type'?: google.protobuf.DescriptorProto[];
      'enum_type'?: google.protobuf.EnumDescriptorProto[];
      'service'?: google.protobuf.ServiceDescriptorProto[];
      'extension'?: google.protobuf.FieldDescriptorProto[];
      'options'?: google.protobuf.FileOptions;
      'source_code_info'?: google.protobuf.SourceCodeInfo;
      'syntax'?: string;
    }


    export interface FileDescriptorSet {
      'file'?: google.protobuf.FileDescriptorProto[];
    }


    export interface FileOptions {
      'java_package'?: string;
      'java_outer_classname'?: string;
      'java_multiple_files'?: boolean;
      'java_generate_equals_and_hash'?: boolean;
      'java_string_check_utf8'?: boolean;
      'optimize_for'?: google.protobuf.FileOptions.OptimizeMode;
      'go_package'?: string;
      'cc_generic_services'?: boolean;
      'java_generic_services'?: boolean;
      'py_generic_services'?: boolean;
      'deprecated'?: boolean;
      'cc_enable_arenas'?: boolean;
      'objc_class_prefix'?: string;
      'csharp_namespace'?: string;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
      '.gogoproto.goproto_getters_all'?: boolean;
      '.gogoproto.goproto_enum_prefix_all'?: boolean;
      '.gogoproto.goproto_stringer_all'?: boolean;
      '.gogoproto.verbose_equal_all'?: boolean;
      '.gogoproto.face_all'?: boolean;
      '.gogoproto.gostring_all'?: boolean;
      '.gogoproto.populate_all'?: boolean;
      '.gogoproto.stringer_all'?: boolean;
      '.gogoproto.onlyone_all'?: boolean;
      '.gogoproto.equal_all'?: boolean;
      '.gogoproto.description_all'?: boolean;
      '.gogoproto.testgen_all'?: boolean;
      '.gogoproto.benchgen_all'?: boolean;
      '.gogoproto.marshaler_all'?: boolean;
      '.gogoproto.unmarshaler_all'?: boolean;
      '.gogoproto.stable_marshaler_all'?: boolean;
      '.gogoproto.sizer_all'?: boolean;
      '.gogoproto.goproto_enum_stringer_all'?: boolean;
      '.gogoproto.enum_stringer_all'?: boolean;
      '.gogoproto.unsafe_marshaler_all'?: boolean;
      '.gogoproto.unsafe_unmarshaler_all'?: boolean;
      '.gogoproto.goproto_extensions_map_all'?: boolean;
      '.gogoproto.goproto_unrecognized_all'?: boolean;
      '.gogoproto.gogoproto_import'?: boolean;
      '.gogoproto.protosizer_all'?: boolean;
      '.gogoproto.compare_all'?: boolean;
      '.gogoproto.typedecl_all'?: boolean;
      '.gogoproto.enumdecl_all'?: boolean;
      '.gogoproto.goproto_registration'?: boolean;
      '.gogoproto.messagename_all'?: boolean;
      '.gogoproto.goproto_sizecache_all'?: boolean;
      '.gogoproto.goproto_unkeyed_all'?: boolean;
    }


    export interface GeneratedCodeInfo {
      'annotation'?: google.protobuf.GeneratedCodeInfo.Annotation[];
    }


    export interface MessageOptions {
      'message_set_wire_format'?: boolean;
      'no_standard_descriptor_accessor'?: boolean;
      'deprecated'?: boolean;
      'map_entry'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
      '.gogoproto.goproto_getters'?: boolean;
      '.gogoproto.goproto_stringer'?: boolean;
      '.gogoproto.verbose_equal'?: boolean;
      '.gogoproto.face'?: boolean;
      '.gogoproto.gostring'?: boolean;
      '.gogoproto.populate'?: boolean;
      '.gogoproto.stringer'?: boolean;
      '.gogoproto.onlyone'?: boolean;
      '.gogoproto.equal'?: boolean;
      '.gogoproto.description'?: boolean;
      '.gogoproto.testgen'?: boolean;
      '.gogoproto.benchgen'?: boolean;
      '.gogoproto.marshaler'?: boolean;
      '.gogoproto.unmarshaler'?: boolean;
      '.gogoproto.stable_marshaler'?: boolean;
      '.gogoproto.sizer'?: boolean;
      '.gogoproto.unsafe_marshaler'?: boolean;
      '.gogoproto.unsafe_unmarshaler'?: boolean;
      '.gogoproto.goproto_extensions_map'?: boolean;
      '.gogoproto.goproto_unrecognized'?: boolean;
      '.gogoproto.protosizer'?: boolean;
      '.gogoproto.compare'?: boolean;
      '.gogoproto.typedecl'?: boolean;
      '.gogoproto.messagename'?: boolean;
      '.gogoproto.goproto_sizecache'?: boolean;
      '.gogoproto.goproto_unkeyed'?: boolean;
    }


    export interface MethodDescriptorProto {
      'name'?: string;
      'input_type'?: string;
      'output_type'?: string;
      'options'?: google.protobuf.MethodOptions;
      'client_streaming'?: boolean;
      'server_streaming'?: boolean;
    }


    export interface MethodOptions {
      'deprecated'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
    }


    export interface OneofDescriptorProto {
      'name'?: string;
      'options'?: google.protobuf.OneofOptions;
    }


    export interface OneofOptions {
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
    }


    export interface ServiceDescriptorProto {
      'name'?: string;
      'method'?: google.protobuf.MethodDescriptorProto[];
      'options'?: google.protobuf.ServiceOptions;
    }


    export interface ServiceOptions {
      'deprecated'?: boolean;
      'uninterpreted_option'?: google.protobuf.UninterpretedOption[];
    }


    export interface SourceCodeInfo {
      'location'?: google.protobuf.SourceCodeInfo.Location[];
    }


    export interface UninterpretedOption {
      'name'?: google.protobuf.UninterpretedOption.NamePart[];
      'identifier_value'?: string;
      'positive_int_value'?: string;
      'negative_int_value'?: string;
      'double_value'?: string;
      'string_value'?: string;
      'aggregate_value'?: string;
    }


    export namespace DescriptorProto {
      export interface ExtensionRange {
        'start'?: number;
        'end'?: number;
      }


      export interface ReservedRange {
        'start'?: number;
        'end'?: number;
      }


    }
    export namespace FieldDescriptorProto {
      export enum Label {
        LABEL_OPTIONAL = 1,
        LABEL_REQUIRED = 2,
        LABEL_REPEATED = 3,
      }


      export enum Type {
        TYPE_DOUBLE = 1,
        TYPE_FLOAT = 2,
        TYPE_INT64 = 3,
        TYPE_UINT64 = 4,
        TYPE_INT32 = 5,
        TYPE_FIXED64 = 6,
        TYPE_FIXED32 = 7,
        TYPE_BOOL = 8,
        TYPE_STRING = 9,
        TYPE_GROUP = 10,
        TYPE_MESSAGE = 11,
        TYPE_BYTES = 12,
        TYPE_UINT32 = 13,
        TYPE_ENUM = 14,
        TYPE_SFIXED32 = 15,
        TYPE_SFIXED64 = 16,
        TYPE_SINT32 = 17,
        TYPE_SINT64 = 18,
      }


    }
    export namespace FieldOptions {
      export enum CType {
        STRING = 0,
        CORD = 1,
        STRING_PIECE = 2,
      }


      export enum JSType {
        JS_NORMAL = 0,
        JS_STRING = 1,
        JS_NUMBER = 2,
      }


    }
    export namespace FileOptions {
      export enum OptimizeMode {
        SPEED = 1,
        CODE_SIZE = 2,
        LITE_RUNTIME = 3,
      }


    }
    export namespace GeneratedCodeInfo {
      export interface Annotation {
        'path'?: number[];
        'source_file'?: string;
        'begin'?: number;
        'end'?: number;
      }


    }
    export namespace SourceCodeInfo {
      export interface Location {
        'path'?: number[];
        'span'?: number[];
        'leading_comments'?: string;
        'trailing_comments'?: string;
        'leading_detached_comments'?: string[];
      }


    }
    export namespace UninterpretedOption {
      export interface NamePart {
        'name_part': string;
        'is_extension': boolean;
      }


    }
  }
}
export namespace trade_common {
  export interface CreateBatchTaskResponse {
    /** 接收数量 */
    'totalCount'?: number;
    /** 成功加入批量任务数量 */
    'successCount'?: number;
    /** 后台异步批量任务ID,唯一标识 */
    'taskId'?: number;
  }


  export interface GetBatchTaskResultResponse {
    /** 是否存在最后一次任务结果 */
    'exists'?: boolean;
    /** 最后一次任务时间 ex:2018-11-13 14:00:00 */
    'lastCreateTime'?: string;
    /** 接收到任务数量 */
    'receiveCount'?: number;
    /** 任务处理成功数量 */
    'successCount'?: number;
    /** 任务处理失败数量 */
    'failCount'?: number;
    /** 结果URL地址 */
    'resultUrl'?: string;
    /** 任务是否已经结束 */
    'isDone'?: boolean;
  }


}
export namespace trade_yxdj_proto {
  export interface ActivityBase {
    /** 活动id */
    'activityId'?: string;
    /** 项目ID */
    'projectId'?: string;
    /** 活动名称 */
    'activityName'?: string;
    /** 活动开始时间 */
    'startDate'?: string;
    /** 活动结束时间 */
    'endDate'?: string;
    /** 是否开通授权 */
    'isAuth'?: boolean;
    /** 是否已发布 */
    'isPublish'?: boolean;
    /** 人数上限 */
    'maxCount'?: number;
    /** 审核结果短信通知开关 */
    'isEnableMobileNotify'?: boolean;
    /** 手机短信验证开关 */
    'isEnableMobileVerify'?: boolean;
    /** 活动提示 */
    'tips'?: string;
    /** 核验项版本号 */
    'verificationVersion'?: number;
    /** 客户编号显示开关 */
    'isEnableNumDisplay'?: boolean;
    /** 是否开启导入客户校验 开启后登录和提交资料会校验当前登录客户数据 */
    'isEnableListVerify'?: boolean;
    /** 导入客户校验类型 0.无 1.证件号 3.证件号+手机号 */
    'listVerifyType'?: number;
    /** 是否允许联名购房人提交 */
    'isEnableStakeholderSubmit'?: boolean;
    /** 提交资料按数字分组（1~99） */
    'groupCount'?: number;
    /** 联名购房人上限（0~3） */
    'maxStakeholderCount'?: number;
    /** 水印文字（0~60） */
    'watermark'?: string;
    /** 活动名单客户数（仅云客后台获取列表时有值，其他场景值为0） */
    'customerNum'?: number;
    /** 活动是否已结束 */
    'isEnd'?: boolean;
    /** 资料修改截止时间 */
    'allowModifyDeadline'?: string;
    /** 登记编号前缀 */
    'commitNumPrefix'?: string;
    /** 登记编号位长度 */
    'commitNumSize'?: number;
  }


  export interface ActivityListFilter {
    /** 云客项目ID */
    'projectId'?: string;
    /** 关键字过滤 活动名称 */
    'keyword'?: string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
    /** 排序字段 1:按照发布在前，然后按照创建时间排序 2:按照创建时间排序 */
    'sort': number;
  }


  export interface Address {
    /** 地址类型 0:省/市/区,1:省/市/区 + 自主输入详细信息 */
    'addressType': number;
  }


  export interface AddressData {
    /** 地址 */
    'region'?: string;
    /** 详细地址 */
    'detailedAddress'?: string;
  }


  export interface AuditDescTpl {
    /** 审核说明模板id */
    'auditDescTplId'?: string;
    /** 审核说明模板内容 */
    'auditDescTplContent': string;
  }


  export interface AuditDescTplId {
    /** 审核说明模板id */
    'auditDescTplId': string;
  }


  export interface AuditDescTplListFilter {
    /** 项目id */
    'projectId': string;
    /** 关键字 */
    'keyword'?: string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex'?: number;
    /** 每页显示多少条 */
    'pageSize'?: number;
  }


  export interface AuditFlow {
    /** 提交资料时间 */
    'submitDate'?: string;
    /** 本次提交资料下的审核资料流水 */
    'list'?: trade_yxdj_proto.AuditFlowDetail[];
  }


  export interface AuditFlowDetail {
    /** 审核流水ID */
    'auditFlowId'?: string;
    /** 审核节点名称 */
    'auditNodeName'?: string;
    /** 审核人员名称 */
    'auditorName'?: string;
    /** 审核时间 */
    'auditDate'?: string;
    /** 审核结果1:全部通过,2:部分不通过,3:全部不通过,4:资料打回 */
    'auditResult'?: number;
    /** 审核操作1:继续审核,2:驳回修改,3:流程回转,4:资料打回 */
    'auditOperate'?: number;
    /** 流程回转时的下一个节点 */
    'nextNodeName'?: string;
  }


  export interface AuditFlowSnapshot {
    /** 主购房人姓名 */
    'masterSnapshot'?: trade_yxdj_proto.AuditFlowSnapshotInfo;
    /** 联名购房人信息 */
    'stakeholderSnapshotList'?: trade_yxdj_proto.AuditFlowSnapshotInfo[];
  }


  export interface AuditFlowSnapshotDetail {
    /** 选项名称 */
    'optionName'?: string;
    /** 审核不通过原因 */
    'failReason'?: string;
    /** 如果是单选类型会有子选项的审核不通过详情 */
    'subAuditFlowSnapshot'?: trade_yxdj_proto.AuditFlowSnapshotDetail;
  }


  export interface AuditFlowSnapshotGroup {
    /** 审核分组名称 */
    'optionGroupName'?: string;
    /** 审核不通过快照列表 */
    'list'?: trade_yxdj_proto.AuditFlowSnapshotDetail[];
  }


  export interface AuditFlowSnapshotInfo {
    /** 购房人姓名 */
    'name'?: string;
    /** 购房人不通过的选项分组快照 */
    'list'?: trade_yxdj_proto.AuditFlowSnapshotGroup[];
  }


  export interface AuditNodeBaseResponse {
    /** 节点id */
    'auditNodeId': string;
    /** 节点名称 */
    'auditNodeName': string;
    /** 节点排序 */
    'sort': number;
    /** 是否终审节点 */
    'isFinalNode': boolean;
    /** 选项分组id list */
    'optionGroupIdList': string[];
  }


  export interface AuditNodeIdRequest {
    /** 节点id */
    'auditNodeId': string;
  }


  export interface AuditNodeListFilter {
    /** 活动ID */
    'activityId': string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex'?: number;
    /** 每页显示多少条 */
    'pageSize'?: number;
  }


  export interface AuditNodeResponse {
    /** 结果 */
    'isSucceed': boolean;
    /** 字段重复集：name,sort,空 */
    'existedSet'?: string[];
  }


  export interface AuditRecord {
    /** 资料选项ID */
    'informationOptionId'?: string;
    /** 选项ID */
    'optionId'?: string;
    /** 审核状态 0：未审核；1：审核通过；2：不通过 */
    'auditStatus'?: number;
    /** 审核不通过原因 */
    'failReason'?: string;
  }


  export interface AuditRollbackRequest {
    /** 资料ID */
    'informationId': string;
    /** 打回说明 */
    'rollbackDesc': string;
    /** 审核人员ID */
    'auditorId': string;
  }


  export interface Auditor {
    /** 审核人员ID */
    'auditorId'?: string;
    /** 云客后台用户 */
    'YKCustomer'?: trade_yxdj_proto.YKCustomer;
    /** 所属分组 */
    'auditGroupNo'?: number[];
    /** 所属节点ID */
    'auditNodeId'?: string;
  }


  export interface AuditorListFilterRequest {
    /** 活动ID */
    'activityId': string;
    /** 关键字 */
    'keyword'?: string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
  }


  export interface AuditorListFilterResponse {
    /** 审核人员 */
    'list'?: trade_yxdj_proto.Auditor[];
    /** 列表总数 */
    'total'?: number;
  }


  export interface AuthRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface BatchSetAuditFail {
    /** 审核不通过列表 */
    'list': trade_yxdj_proto.SetAuditFail[];
  }


  export interface BatchSetAuditPass {
    /** 审核通过的资料选项ID列表 */
    'informationOptionIdList': string[];
  }


  export interface BatchSetAuditResultRequest {
    /** 资料ID */
    'informationId': string;
    /** 审核通过 */
    'pass'?: trade_yxdj_proto.BatchSetAuditPass;
    /** 审核不通过 */
    'fail'?: trade_yxdj_proto.BatchSetAuditFail;
    /** 审核人员ID */
    'auditorId': string;
  }


  export interface CacheInformation {
    /** 选项分组ID */
    'optionGroupId'?: string;
    /** 缓存值 由前端定义 */
    'cacheValue'?: string;
  }


  export interface CacheInformationRequest {
    /** 活动ID */
    'activityId': string;
    /** 选项分组ID */
    'optionGroupId': string;
    /** 客户ID */
    'customerId': string;
    /** 缓存值 由前端定义 */
    'cacheValue': string;
  }


  export interface ChangeActivityDateRequest {
    /** 活动id */
    'activityId': string;
    /** 活动开始时间(格式:2020-07-28 14:44:25) */
    'startDate': string;
    /** 活动结束时间(格式:2020-07-28 14:44:25) */
    'endDate': string;
  }


  export interface Checkbox {
    'checkboxItemList'?: trade_yxdj_proto.CheckboxItem[];
  }


  export interface CheckboxData {
    /** 选址的选项值ID */
    'itemIdList'?: string[];
  }


  export interface CheckboxItem {
    /** 选项-选项列表创建时不需要传，修改时需要传入获取和查询需要该ID */
    'itemId'?: string;
    /** 选项值 */
    'itemValue': string;
    /** 积分值 */
    'score'?: string;
    /** 选项顺序创建时不需要传，修改时需要传入 */
    'sort'?: number;
  }


  export interface CopyActivityRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface CreateActivityRequest {
    /** 项目id */
    'projectId': string;
    /** 活动名称 */
    'activityName': string;
    /** 活动开始时间(格式:2020-07-28 14:44:25) */
    'startDate': string;
    /** 活动结束时间(格式:2020-07-28 14:44:25) */
    'endDate': string;
    /** 是否启用手机号码验证 */
    'isEnableMobileVerify': boolean;
    /** 是否开启审核结果短信通知 */
    'isEnableMobileNotify': boolean;
    /** 是否显示登记编号 */
    'isEnableNumDisplay': boolean;
    /** 是否开启导入客户校验 开启后登录和提交资料会校验当前登录客户数据 */
    'isEnableListVerify': boolean;
    /** 导入客户校验类型 1.证件号 3.证件号+手机号 */
    'listVerifyType': number;
    /** 是否开启联名购房人可提交资料 */
    'isEnableStakeholderSubmit': boolean;
    /** 审核分组数量 */
    'groupCount'?: number;
    /** 水印文字（0~60） */
    'watermark'?: string;
    /** 提示语(1~300) */
    'tips': string;
    /** 人数上限（0~9999999  0-不限制，>=1则表示限制，限制范围[1~999999]） */
    'maxCount'?: number;
    /** 资料修改截止时间：截止时间必须大于资料提交时间的结束时间 (格式:2020-07-28 14:44:25) */
    'allowModifyDeadline': string;
    /** 登记编号前缀 */
    'commitNumPrefix'?: string;
    /** 登记编号位长度 */
    'commitNumSize': number;
  }


  export interface CreateActivityResponse {
    /** 活动id */
    'activityId': string;
  }


  export interface CreateAuditDescTplRequest {
    /** 项目id */
    'projectId': string;
    /** 审核说明模板内容 */
    'auditDescTplContent': string;
  }


  export interface CreateAuditNodeRequest {
    /** 活动id */
    'activityId': string;
    /** 节点名称 */
    'auditNodeName': string;
    /** 节点排序 */
    'sort': number;
    /** 选项分组id list */
    'optionGroupIdList': string[];
  }


  export interface CreateAuditorRequest {
    /** 活动ID */
    'activityId': string;
    /** 云客后台用户ID列表 */
    'ykCustomerIdList': string[];
  }


  export interface CreateAuditorResponse {
    /** 成功导入数量 */
    'successCount'?: number;
    /** 导入失败数量 */
    'failCount'?: number;
  }


  export interface CreateCustomerRequest {
    /** 项目ID */
    'projectId': string;
    /** 活动ID */
    'activityId': string;
    /** 姓名(限制最大30个字) */
    'name': string;
    /** 手机号码(限制最大20个字) */
    'mobile': string;
    /** 证件号(限制最大30个字) */
    'idCardNo': string;
    /** 证件类型 0：身份证，1：护照，2：港澳居民来往内地通行证，3：台胞证，255：其他 */
    'cardType': number;
    /** 客户类型（0：注册客户，1：新增客户/导入客户） */
    'customerType': number;
    /** 短信验证码 */
    'captcha'?: string;
  }


  export interface CreateInformationRequest {
    /** 客户ID */
    'customerId': string;
    /** 资料项 */
    'data': trade_yxdj_proto.InformationGroupData;
  }


  export interface CreateInformationResponse {
    /** 资料ID */
    'informationId': string;
  }


  export interface CreateLibraryOptionRequest {
    /** 项目ID */
    'projectId': string;
    /** 要添加的选项 */
    'option': trade_yxdj_proto.LibraryOption;
  }


  export interface CreateLibraryOptionResponse {
    /** 选项ID */
    'optionId'?: string;
  }


  export interface CreateOptionGroupRequest {
    /** 要添加选项分组的活动ID */
    'activityId': string;
    /** 选项分组名称 */
    'name': string;
  }


  export interface CreateOptionGroupResponse {
    /** 选项分组ID */
    'optionGroupId'?: string;
  }


  export interface CreateOptionRequest {
    /** 分组ID */
    'optionGroupId': string;
    /** 选项 */
    'option': trade_yxdj_proto.Option;
  }


  export interface CreateOptionResponse {
    /** 选项ID */
    'optionId'?: string;
  }


  export interface CustomerBase {
    /** 客户ID */
    'customerId'?: string;
    /** 活动ID */
    'activityId'?: string;
    /** 活动ID */
    'projectId'?: string;
    /** 姓名 */
    'name'?: string;
    /** 手机号码 */
    'mobile'?: string;
    /** 证件号 */
    'idCardNo'?: string;
    /** 证件类型 0：身份证，1：护照，2：港澳居民来往内地通行证，3：台胞证，255：其他 */
    'cardType'?: number;
    /** 客户类型（0：注册客户，1：新增客户/导入客户） */
    'customerType'?: number;
    /** 首次登录时间(格式:2020-07-28 14:44:25) */
    'firstLoginDate'?: string;
    /** 是否已提交 */
    'isSubmitted'?: boolean;
    /** 置业顾问姓名 */
    'salespersonName'?: string;
    /** 置业顾问手机号码 */
    'salespersonMobile'?: string;
    /** 身份证扩展信息 */
    'idCardExt'?: trade_yxdj_proto.CustomerIdCardExt;
  }


  export interface CustomerGroupData {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 资料选项数据 */
    'informationDataList'?: trade_yxdj_proto.InformationData[];
  }


  export interface CustomerIdCardExt {
    /** 性别 0:无法识别 1:男 2:女 */
    'gender'?: number;
    /** 年龄 0:无法识别 其它为正常年龄 */
    'age'?: number;
  }


  export interface CustomerListFilterRequest {
    /** 云客项目ID */
    'projectId': string;
    /** 活动ID */
    'activityId': string;
    /** 关键字过滤 姓名/手机号/证件号码 */
    'keyword'?: string;
    /** 提交状态（0：全部，1：已提交，2：未提交） */
    'submitStatus'?: number;
    /** 开始时间(格式:2020-07-28 14:44:25) */
    'startDate'?: string;
    /** 结束时间(格式:2020-07-28 14:44:25) */
    'endDate'?: string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
    /** 是否隐号，有全号查询权限导出的身份证和手机号才不会隐号 */
    'isMask': boolean;
  }


  export interface Date {
  }


  export interface DateData {
    /** 客户输入日期格式：2018-08-10 */
    'inputValue'?: string;
  }


  export interface DeleteActivityRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface DeleteAuditorRequest {
    /** 审核人员ID */
    'auditorId': string;
  }


  export interface DeleteCustomerRequest {
    /** 客户ID */
    'customerId': string;
  }


  export interface DeleteInformationRequest {
    /** 资料ID */
    'informationId': string;
  }


  export interface DeleteLibraryOptionRequest {
    /** 选项库选项id */
    'libraryOptionId': string;
  }


  export interface DeleteOptionGroupRequest {
    /** 选项分组ID */
    'optionGroupId': string;
  }


  export interface DeleteOptionRequest {
    /** 选项ID */
    'optionId': string;
  }


  export interface ExampleImage {
    /** 图片标题 */
    'title'?: string;
    /** 图片地址 */
    'url'?: string;
  }


  export interface ExportAuditFlowResponse {
    /** 导出地址 */
    'exportUrl': string;
  }


  export interface ExportByFilterResponse {
    /** 导出链接URL地址 */
    'exportUrl': string;
  }


  export interface File {
    /** 文件类型 1:pdf 2:Png 3:JPG/JPEG */
    'typeList': number[];
    /** 上传文件数量 */
    'limitNum': number;
  }


  export interface FileData {
    /** 文件列表 */
    'fileUrlList'?: string[];
  }


  export interface GetActivityListResponse {
    /** 活动基本信息列表 */
    'list'?: trade_yxdj_proto.ActivityBase[];
    /** 总数 */
    'total'?: number;
  }


  export interface GetActivityRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface GetActivityResponse {
    /** 活动基本信息 */
    'activity'?: trade_yxdj_proto.ActivityBase;
    /** 活动协议 */
    'protocolUrl'?: string;
    /** 是否使用默认图片url */
    'isDefaultFirstPage'?: boolean;
    /** 首页图片地址 为空时表示设置为默认图片 */
    'firstPageUrl'?: string;
    /** 活动资格说明url,为空表示资格说明为空 */
    'qualificationsUrl'?: string;
    /** 活动详细说明url,为空表示详细说明为空 */
    'instructionsUrl'?: string;
    /** 公示标题 */
    'promulgateTitle'?: string;
    /** promulgateContentUrl 公示内容url */
    'promulgateContentUrl'?: string;
    /** 主购房人描述 */
    'masterDescription'?: string;
    /** 联名购房人描述 */
    'stakeholderDescription'?: string;
    /** 最大联名购房人数量 */
    'maxStakeholderCount'?: number;
  }


  export interface GetAuditDescTplListResponse {
    'list'?: trade_yxdj_proto.AuditDescTpl[];
    /** 总数 */
    'total'?: number;
  }


  export interface GetAuditFlowRequest {
    /** 审核流水ID */
    'auditFlowId': string;
  }


  export interface GetAuditFlowResponse {
    /** 审核流水详情 */
    'auditFlow'?: trade_yxdj_proto.AuditFlowDetail;
    /** 资料打回描述 */
    'rollbackDesc'?: string;
    /** 审核记录不通过快照 */
    'auditFlowSnapshot'?: trade_yxdj_proto.AuditFlowSnapshot;
  }


  export interface GetAuditInformationOptionRequest {
    /** 资料ID */
    'informationId': string;
    /** 审核人员ID 没审核权限的用户查看时为空 */
    'auditorId'?: string;
    /** 是否掩码 */
    'isMask': boolean;
  }


  export interface GetAuditInformationOptionResponse {
    /** 客户ID */
    'customerId'?: string;
    /** 资料分组数据 */
    'masterDataList'?: trade_yxdj_proto.CustomerGroupData[];
    /** 联名购房人资料项提交数据信息 */
    'stakeholderDataList'?: trade_yxdj_proto.InformationCustomerGroupData[];
  }


  export interface GetAuditNodeListResponse {
    /** 活动基本信息列表 */
    'list'?: trade_yxdj_proto.AuditNodeBaseResponse[];
    /** 总数 */
    'total'?: number;
  }


  export interface GetAuditRecordListRequest {
    /** 资料ID */
    'informationId': string;
    /** 选项分组IDs为空时返回所有分组 */
    'optionGroupIdList'?: string[];
  }


  export interface GetAuditRecordListResponse {
    /** 主购房人审核记录 */
    'masterList'?: trade_yxdj_proto.GroupAuditRecord[];
    /** 联名购房人审核记录 */
    'stakeholderList'?: trade_yxdj_proto.StakeholderAuditRecord[];
  }


  export interface GetAuditStatRequest {
    /** 活动ID */
    'activityId': string;
  }


  export interface GetAuditStatResponse {
    /** 审核中 */
    'auditing'?: boolean;
    /** 驳回修改 */
    'rollback'?: boolean;
  }


  export interface GetAuditorByIdRequest {
    /** 审核人员ID */
    'auditorId'?: string;
  }


  export interface GetAuditorByIdResponse {
    /** 审核人员 */
    'auditor'?: trade_yxdj_proto.Auditor;
  }


  export interface GetAuditorByYkCustomerIdRequest {
    /** 云客后台用户ID */
    'ykCustomerId': string;
    /** 项目ID */
    'projectId': string;
  }


  export interface GetAuditorByYkCustomerIdResponse {
    /** 是否存在云客审核人员 */
    'isExists'?: boolean;
    /** 审核人员 */
    'auditor'?: trade_yxdj_proto.Auditor;
  }


  export interface GetByIdCardNoRequest {
    /** 云客活动ID */
    'activityId': string;
    /** 证件号 */
    'idCardNo': string;
  }


  export interface GetByIdCardNoResponse {
    'customer'?: trade_yxdj_proto.CustomerBase;
  }


  export interface GetByIdRequest {
    /** 客户ID */
    'customerId': string;
  }


  export interface GetByIdResponse {
    /** 客户 */
    'customer'?: trade_yxdj_proto.CustomerBase;
  }


  export interface GetCacheInformationRequest {
    /** 活动ID */
    'activityId': string;
    /** 选项分组ID 可以为空，为空时返回客户活动下所有分组缓存 */
    'optionGroupId'?: string;
    /** 客户ID */
    'customerId': string;
  }


  export interface GetCacheInformationResponse {
    /** 缓存数据 */
    'list'?: trade_yxdj_proto.CacheInformation[];
  }


  export interface GetCustomerByIdListRequest {
    /** 客户ID */
    'customerId': string[];
    /** 是否掩码 */
    'isMask': boolean;
  }


  export interface GetCustomerByIdListResponse {
    /** 客户信息 */
    'customer'?: trade_yxdj_proto.CustomerBase[];
  }


  export interface GetCustomerImportResultRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface GetCustomerListResponse {
    /** 用户列表 */
    'list'?: trade_yxdj_proto.CustomerBase[];
    /** 列表总数 */
    'total'?: number;
  }


  export interface GetDetailListRequest {
    /** 选项库选项id */
    'libraryOptionIds': string[];
  }


  export interface GetDetailListResponse {
    /** 选项库选项信息列表 */
    'optionList': trade_yxdj_proto.LibraryOptionWithId[];
  }


  export interface GetInfoAuditFlowRequest {
    /** 资料ID */
    'informationId': string;
  }


  export interface GetInfoAuditFlowResponse {
    /** 审核流水 */
    'list'?: trade_yxdj_proto.AuditFlow[];
  }


  export interface GetInfoByCustomerIdRequest {
    /** 客户ID */
    'customerId': string;
  }


  export interface GetInformationOptionByIdRequest {
    /** 资料ID */
    'informationId': string;
  }


  export interface GetInformationOptionByIdResponse {
    /** 客户ID */
    'customerId'?: string;
    /** 资料分组数据 */
    'masterDataList'?: trade_yxdj_proto.CustomerGroupData[];
    /** 联名购房人资料项提交数据信息 */
    'stakeholderDataList'?: trade_yxdj_proto.InformationCustomerGroupData[];
  }


  export interface GetInformationRequest {
    /** 资料ID */
    'informationId': string;
  }


  export interface GetInformationResponse {
    /** 资料基本信息 */
    'informationBase'?: trade_yxdj_proto.InformationBase;
  }


  export interface GetLibraryOptionByIdRequest {
    /** 选项库选项ID */
    'libraryOptionId': string;
  }


  export interface GetLibraryOptionByIdResponse {
    /** 选项库选项id */
    'libraryOptionId': string;
    /** 项目ID */
    'projectId': string;
    /** 选项信息 */
    'option': trade_yxdj_proto.LibraryOption;
  }


  export interface GetListFilter {
    /** 云客项目ID */
    'projectId': string;
    /** 关键字过滤 选项名称 */
    'keyword'?: string;
    /** 选项类型 -1:全部 1:单选 2:多选 3:文本 4:日期 5:图片 6:地址 7:证件号码 8:文件 */
    'optionType': number;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
  }


  export interface GetListResponse {
    /** 选项库基本信息列表 */
    'list': trade_yxdj_proto.LibraryOptionListBase[];
    /** 总数 */
    'total': number;
  }


  export interface GetMaxSortRequest {
    /** 活动ID */
    'activityId': string;
  }


  export interface GetMaxSortResponse {
    /** 最大值 */
    'maxSort': number;
  }


  export interface GetNextAuditInformationRequest {
    /** 过滤条件 */
    'filter': trade_yxdj_proto.InformationListFilter;
  }


  export interface GetNextAuditInformationResponse {
    /** 资料ID 为空时表示没有下一个满足条件的资料 */
    'informationId': string;
  }


  export interface GetOptionByIdRequest {
    /** 选项ID */
    'optionId': string;
  }


  export interface GetOptionByIdResponse {
    /** 选项信息 */
    'option': trade_yxdj_proto.OptionWithGroupId;
  }


  export interface GetOptionGroupListRequest {
    /** 要添加选项分组的活动ID */
    'activityId': string;
  }


  export interface GetOptionGroupListResponse {
    'optionGroupList'?: trade_yxdj_proto.OptionGroup[];
  }


  export interface GetOptionListByGroupIdRequest {
    /** 选项分组ID */
    'optionGroupId': string;
  }


  export interface GetOptionListByGroupIdResponse {
    'optionList'?: trade_yxdj_proto.OptionWithGroupId[];
  }


  export interface GetSubmittedInfoCountRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface GetSubmittedInfoCountResponse {
    /** 人数 */
    'count'?: number;
  }


  export interface GetYKCustomerListRequest {
    /** 项目ID */
    'projectId': string;
    /** 关键字 */
    'keyword'?: string;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
  }


  export interface GetYKCustomerListResponse {
    /** 云客后台用户 审核人员列表 */
    'list'?: trade_yxdj_proto.YKCustomer[];
    /** 列表总数 */
    'total'?: number;
  }


  export interface GroupAuditRecord {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 主购房人资料 */
    'recordList'?: trade_yxdj_proto.AuditRecord[];
  }


  export interface GroupData {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 资料选项数据 */
    'informationDataList': trade_yxdj_proto.InformationData[];
  }


  export interface IdCard {
    /** 证件类型 0:身份证 1:护照 2:港澳居民来往内地通行证 3:台胞证 255:其他 */
    'typeList': number[];
  }


  export interface IdCardData {
    /** 证件类型 0:身份证 1:护照 2:港澳居民来往内地通行证 3:台胞证 255:其他 */
    'cardType'?: number;
    /** 证件号码 */
    'idCardNo'?: string;
  }


  export interface IdCardExt {
    /** 性别 0:无法识别 1:男 2:女 */
    'gender'?: number;
    /** 年龄 0:无法识别 其它为正常年龄 */
    'age'?: number;
  }


  export interface Image {
    /** 限制上传张数 */
    'limitNum': number;
    /** 是否自定义分类上传 */
    'isUseCustomUpload'?: boolean;
    /** 示例图 */
    'exampleImageList'?: trade_yxdj_proto.ExampleImage[];
  }


  export interface ImageData {
    /** 图片列表 */
    'imageUrlList'?: string[];
  }


  export interface ImportCustomerRequest {
    /** 客户ID */
    'activityId': string;
    /** 导入的excel url地址 */
    'excelUrl': string;
  }


  export interface ImportLibraryOptionRequest {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 要导入的选项库选项ID列表 */
    'libraryOptionIdList': string[];
  }


  export interface ImportLibraryOptionResponse {
    /** 导入选项库选项总数量 */
    'totalCount'?: number;
    /** 成功导入选项库选项数量 */
    'successCount'?: number;
  }


  export interface InformationBase {
    /** 资料ID */
    'informationId'?: string;
    /** 客户ID */
    'customerId'?: string;
    /** 活动ID */
    'activityId'?: string;
    /** 当前审核节点ID */
    'auditNodeId'?: string;
    /** 审核分组号 */
    'auditGroupNo'?: number;
    /** 提交次数 */
    'commitTimes'?: number;
    /** 登记编号 */
    'commitNum'?: string;
    /** 审核状态0:待审核 1:审核中 2:修改驳回 3:资料打回 4:全部审核通过 */
    'auditStatus'?: number;
    /** 首次提交时间 */
    'firstCommitTime'?: string;
    /** 最后修改时间 */
    'lastCommitTime'?: string;
    /** 资料积分 */
    'score'?: string;
  }


  export interface InformationCustomerGroupData {
    /** 客户信息 */
    'stakeholder'?: trade_yxdj_proto.InformationStakeholder;
    /** 资料分组数据 */
    'groupDataList'?: trade_yxdj_proto.CustomerGroupData[];
  }


  export interface InformationData {
    /** 资料选项ID 提交资料时为空 */
    'informationOptionId'?: string;
    /** 选项ID */
    'optionId': string;
    /** 单选 */
    'radioData'?: trade_yxdj_proto.RadioData;
    /** 多选 */
    'checkboxData'?: trade_yxdj_proto.CheckboxData;
    /** 文本 */
    'textData'?: trade_yxdj_proto.TextData;
    /** 日期 */
    'dateData'?: trade_yxdj_proto.DateData;
    /** 图片 */
    'imageData'?: trade_yxdj_proto.ImageData;
    /** 地址 */
    'addressData'?: trade_yxdj_proto.AddressData;
    /** 证件号 */
    'idCardData'?: trade_yxdj_proto.IdCardData;
    /** 文件 */
    'fileData'?: trade_yxdj_proto.FileData;
    /** 选项积分 提交时不传，获取结果时后台返回 */
    'score'?: string;
  }


  export interface InformationGroupData {
    /** 主购房人选项分组数据 */
    'masterDataList': trade_yxdj_proto.GroupData[];
    /** 联名购房人选项分组数据 */
    'stakeholderDataList': trade_yxdj_proto.StakeholderWithGroupData[];
  }


  export interface InformationListFilter {
    /** 活动ID */
    'activityId': string;
    /** 关键字过滤 姓名/手机号/证件号码/登记编号搜索 */
    'keyword'?: string;
    /** 审核分组全部：-1 其它值按照活动配置的审核分组确定 */
    'auditGroupNo': number;
    /** 提交起始时间(格式:2020-07-28 14:44:25) */
    'firstCommitTimeBegin'?: string;
    /** 提交结束时间(格式:2020-07-28 14:44:25) */
    'firstCommitTimeEnd'?: string;
    /** 修改起始时间(格式:2020-07-28 14:44:25) */
    'lastCommitTimeBegin'?: string;
    /** 修改结束时间(格式:2020-07-28 14:44:25) */
    'lastCommitTimeEnd'?: string;
    /** 审核节点ID全部：传空 其它节点传入节点ID */
    'auditNodeId'?: string;
    /** 审核状态-1:全部 0:待审核 1:审核中 2:修改驳回 3:资料打回 4:全部审核通过 */
    'auditStatus': number;
    /** 审核人员ID为空时返回全部，不为空时根据审核人员权限进行过滤用户是审核人员，需要和入参的分组+审核节点作交集 */
    'auditorId'?: string;
    /** 是否掩码 没有全号查询权限的登录用户需要掩码 */
    'isMask': boolean;
  }


  export interface InformationListFilterRequest {
    /** 过滤条件 */
    'filter': trade_yxdj_proto.InformationListFilter;
    /** 当前页数 页数小于0时则获取全部 */
    'pageIndex': number;
    /** 每页显示多少条 */
    'pageSize': number;
  }


  export interface InformationListFilterResponse {
    /** 资料基本信息 */
    'list'?: trade_yxdj_proto.InformationBase[];
    /** 列表总数 */
    'total'?: number;
  }


  export interface InformationStakeholder {
    /** 联名购房人 */
    'stakeholder'?: trade_yxdj_proto.Stakeholder;
    /** 证件号扩展信息 */
    'idCardExt': trade_yxdj_proto.IdCardExt;
  }


  export interface LibraryAddress {
    /** 地址类型 0:省/市/区,1:省/市/区 + 自主输入详细信息 */
    'addressType': number;
  }


  export interface LibraryCheckbox {
    'checkboxItemList'?: trade_yxdj_proto.LibraryCheckboxItem[];
  }


  export interface LibraryCheckboxItem {
    /** 选项参数ID创建时不需要传，修改时需要传入获取和查询需要该ID */
    'itemId'?: string;
    /** 选项值 */
    'itemValue': string;
    /** 积分值 */
    'score'?: string;
    /** 选项顺序创建和修改时不需要传，返回会返回该字段 */
    'sort'?: number;
  }


  export interface LibraryDate {
  }


  export interface LibraryExampleImage {
    /** 图片标题 */
    'title'?: string;
    /** 图片地址 */
    'url': string;
  }


  export interface LibraryFile {
    /** 文件类型 1:pdf 2:Png 3:JPG/JPEG */
    'typeList': number[];
    /** 上传文件数量 */
    'limitNum': number;
  }


  export interface LibraryIdCard {
    /** 证件类型 0:身份证 1:护照 2:港澳居民来往内地通行证 3:台胞证 255:其他 */
    'typeList': number[];
  }


  export interface LibraryImage {
    /** 限制上传张数 */
    'limitNum': number;
    /** 是否自定义分类上传 */
    'isUseCustomUpload'?: boolean;
    /** 示例图 */
    'exampleImageList'?: trade_yxdj_proto.LibraryExampleImage[];
  }


  export interface LibraryOption {
    /** 基础信息 */
    'optionBase': trade_yxdj_proto.LibraryOptionBase;
    /** 单选 */
    'radio'?: trade_yxdj_proto.LibraryRadio;
    /** 多选 */
    'checkbox'?: trade_yxdj_proto.LibraryCheckbox;
    /** 文本 */
    'text'?: trade_yxdj_proto.LibraryText;
    /** 日期 */
    'date'?: trade_yxdj_proto.LibraryDate;
    /** 图片 */
    'image'?: trade_yxdj_proto.LibraryImage;
    /** 地址 */
    'address'?: trade_yxdj_proto.LibraryAddress;
    /** 证件号码 */
    'idCard'?: trade_yxdj_proto.LibraryIdCard;
    /** 文件 */
    'file'?: trade_yxdj_proto.LibraryFile;
  }


  export interface LibraryOptionBase {
    /** 是否必填 */
    'isRequired': boolean;
    /** 标题 */
    'title': string;
    /** 标题描述 */
    'titleDescription'?: string;
    /** 收集对象 1:主购房人,2:联名购房人 */
    'collectionTargetList': number[];
    /** 选项类型 1:单选 2:多选 3:文本 4:日期 5:图片 6:地址 7:证件号码 8:文件 */
    'optionType': number;
  }


  export interface LibraryOptionListBase {
    /** 选项库选项id */
    'libraryOptionId': string;
    /** 选项名称 */
    'title': string;
    /** 选项类型 1:单选 2:多选 3:文本 4:日期 5:图片 6:地址 7:证件号码 8:文件 */
    'optionType': number;
  }


  export interface LibraryOptionWithId {
    /** 选项库选项id */
    'libraryOptionId': string;
    /** 项目ID */
    'projectId': string;
    /** 选项信息 */
    'option': trade_yxdj_proto.LibraryOption;
  }


  export interface LibraryRadio {
    'radioItemList'?: trade_yxdj_proto.LibraryRadioItem[];
  }


  export interface LibraryRadioItem {
    /** 选项参数ID创建时不需要传，修改时需要传入获取和查询需要该ID */
    'itemId'?: string;
    /** 选项值 */
    'itemValue': string;
    /** 积分值 */
    'score'?: string;
    /** 选项顺序创建时和修改时不需要传，返回会返回该字段 */
    'sort'?: number;
  }


  export interface LibraryText {
    /** 类型, 0:不限，1:数字 */
    'textType': number;
    /** 类型, 0:整数，1:小数 */
    'numType'?: number;
    /** 积分填写最小值 */
    'numMin'?: string;
    /** 积分填写最大值 */
    'numMax'?: string;
    /** 积分系数 */
    'scoreRatio'?: string;
    /** 积分上限 */
    'scoreMax'?: string;
  }


  export interface MoveOptionGroupRequest {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 移动的步长如果步长大于0表示向右(或者下)移动，如果当前位置+步长>最大排序，则直接将该字段移动到最后面的位置如果步长小于0表示向左(或者上)移动，如果当前位置+步长<位置1的排序,则直接将该字段移动到最前面的位置(不包含购房人分组)如果移动的购房人分组则直接报错 */
    'step': number;
  }


  export interface MoveOptionRequest {
    /** 选项ID */
    'optionId': string;
    /** 移动的步长如果步长大于0表示向右(或者下)移动，如果当前位置+步长>最大排序，则直接将该选项移动到最后面的位置如果步长小于0表示向左(或者上)移动，如果当前位置+步长<位置1的排序,则直接将该选项移动到最前面的位置 */
    'step': number;
  }


  export interface Option {
    /** 基础信息 */
    'optionBase': trade_yxdj_proto.OptionBase;
    /** 单选 */
    'radio'?: trade_yxdj_proto.Radio;
    /** 多选 */
    'checkbox'?: trade_yxdj_proto.Checkbox;
    /** 文本 */
    'text'?: trade_yxdj_proto.Text;
    /** 日期 */
    'date'?: trade_yxdj_proto.Date;
    /** 图片 */
    'image'?: trade_yxdj_proto.Image;
    /** 地址 */
    'address'?: trade_yxdj_proto.Address;
    /** 证件号码 */
    'idCard'?: trade_yxdj_proto.IdCard;
    /** 文件 */
    'file'?: trade_yxdj_proto.File;
  }


  export interface OptionBase {
    /** 是否必填 */
    'isRequired': boolean;
    /** 标题 */
    'title': string;
    /** 标题描述 */
    'titleDescription'?: string;
    /** 收集对象 1:主购房人,2:联盟购房人 */
    'collectionTargetList': number[];
    /** 选项类型 1:单选 2:多选 3:文本 4:日期 5:图片 6:地址 7:证件号码 8:文件 */
    'optionType': number;
    /** 新增、编辑选项时，sort不需要传,传了也默认没传，编辑子项的时候需要传只有通过ID获取和返回时会返回改字段 */
    'sort'?: number;
  }


  export interface OptionGroup {
    /** 选项分组ID */
    'optionGroupId'?: string;
    /** 选项分组名称 */
    'name'?: string;
  }


  export interface OptionWithGroupId {
    /** 选项ID */
    'optionId': string;
    /** 分组ID */
    'optionGroupId': string;
    /** 选项信息 */
    'option': trade_yxdj_proto.Option;
  }


  export interface PublishRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface Radio {
    'radioItemList'?: trade_yxdj_proto.RadioItem[];
  }


  export interface RadioData {
    /** 选择的选项值ID */
    'itemId'?: string;
    /** 单选子选项资料项 */
    'subOptionData'?: trade_yxdj_proto.InformationData;
  }


  export interface RadioItem {
    /** 选项参数ID创建时不需要传，修改时需要传入获取和查询需要该ID */
    'itemId'?: string;
    /** 选项值 */
    'itemValue': string;
    /** 积分值 */
    'score'?: string;
    /** 选项顺序创建时不需要传，修改时需要传入 */
    'sort'?: number;
    /** 子选项 */
    'subOptionList'?: trade_yxdj_proto.SubOption[];
  }


  export interface ResetCaptchaCountRequest {
    /** 客户ID */
    'customerId': string;
  }


  export interface SendCaptchaRequest {
    /** 项目ID */
    'projectId': string;
    /** 活动ID */
    'activityId': string;
    /** 手机号码 */
    'mobile': string;
  }


  export interface SetAuditFail {
    /** 审核不通过的资料选项ID */
    'informationOptionId': string;
    /** 审核不通过原因 */
    'failReason': string;
  }


  export interface SetAuditOperateRequest {
    /** 资料ID */
    'informationId': string;
    /** 审核操作1:继续审核,2:驳回修改,3:流程回转 */
    'auditOperate': number;
    /** 审核操作为3时的流程回转节点Id */
    'nextAuditNodeId'?: string;
    /** 审核人员ID */
    'auditorId': string;
  }


  export interface Stakeholder {
    /** 姓名(限制最大20个字) */
    'name': string;
    /** 手机号码(限制最大20个字) */
    'mobile': string;
    /** 证件号(限制最大30个字) */
    'idCardNo': string;
    /** 证件类型 0：身份证，1：护照，2：港澳居民来往内地通行证，3：台胞证，255：其他 */
    'cardType': number;
    /** 首次提交时为空，修改资料时需要传ID */
    'stakeholderId'?: string;
  }


  export interface StakeholderAuditRecord {
    /** 联名购房人ID */
    'stakeholderId'?: string;
    /** 审核记录 */
    'list'?: trade_yxdj_proto.GroupAuditRecord[];
  }


  export interface StakeholderWithGroupData {
    /** 联名购房人信息 */
    'stakeholder': trade_yxdj_proto.Stakeholder;
    /** 联名购房人资料数据 */
    'list': trade_yxdj_proto.GroupData[];
  }


  export interface SubOption {
    /** 选项ID创建选项时，不需要该字段修改选项时，如果传了该字段说明是编辑该子选项，如果没传该字段说明是新增该子选项获取选项时，该字段必定返回 */
    'optionId'?: string;
    /** 选项信息 */
    'option': trade_yxdj_proto.Option;
  }


  export interface Text {
    /** 类型, 0:不限，1:数字 */
    'textType': number;
    /** 类型, 0:整数，1:小数 */
    'numType': number;
    /** 积分填写最小值 */
    'numMin'?: string;
    /** 积分填写最大值 */
    'numMax'?: string;
    /** 积分系数 */
    'scoreRatio'?: string;
    /** 积分上限 */
    'scoreMax'?: string;
  }


  export interface TextData {
    /** 客户输入值 */
    'inputValue'?: string;
  }


  export interface UnAuthRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface UnPublishRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface UpdateActivityProtocolRequest {
    /** 活动id */
    'activityId': string;
    /** 活动协议url */
    'protocolUrl'?: string;
  }


  export interface UpdateActivityRequest {
    /** 活动id */
    'activityId': string;
    /** 活动名称 */
    'activityName': string;
    /** 活动开始时间 */
    'startDate': string;
    /** 活动结束时间 */
    'endDate': string;
    /** 审核结果短信通知开关 */
    'isEnableMobileNotify': boolean;
    /** 手机短信验证开关，0表示关闭，1表示开启 */
    'isEnableMobileVerify': boolean;
    /** 名单审核开关 */
    'isEnableListVerify': boolean;
    /** 客户编号显示开关 */
    'isEnableNumDisplay': boolean;
    /** 导入客户校验类型 1.证件号 3.证件号+手机号 */
    'listVerifyType': number;
    /** 是否允许联名购房人提交 */
    'isEnableStakeholderSubmit': boolean;
    /** 提交资料按数字分组（0~99） */
    'groupCount'?: number;
    /** 水印文字（0~60） */
    'watermark'?: string;
    /** 提示语(1~300) */
    'tips': string;
    /** 人数上限（0~9999999  0-不限制，>=1则表示限制，限制范围[1~999999]） */
    'maxCount'?: number;
    /** 资料修改截止时间：截止时间必须大于资料提交时间的结束时间 (格式:2020-07-28 14:44:25) */
    'allowModifyDeadline': string;
    /** 登记编号前缀 */
    'commitNumPrefix'?: string;
    /** 登记编号位长度 */
    'commitNumSize'?: number;
  }


  export interface UpdateAuditDescTplRequest {
    /** 审核说明模板id */
    'auditDescTplId': string;
    /** 审核说明模板内容 */
    'auditDescTplContent': string;
  }


  export interface UpdateAuditNodeRequest {
    /** 节点id */
    'auditNodeId': string;
    /** 节点名称 */
    'auditNodeName': string;
    /** 节点排序 */
    'sort': number;
    /** 选项分组id list */
    'optionGroupIdList': string[];
  }


  export interface UpdateAuditorRequest {
    /** 审核人员ID */
    'auditorId': string;
    /** 所属分组 */
    'auditGroupNo': number[];
    /** 所属节点ID */
    'auditNodeId': string;
  }


  export interface UpdateCustomerRequest {
    /** 客户ID */
    'customerId': string;
    /** 姓名(限制最大30个字) */
    'name': string;
    /** 手机号码 */
    'mobile': string;
    /** 证件号 */
    'idCardNo': string;
    /** 证件类型 0：身份证，1：护照，2：港澳居民来往内地通行证，3：台胞证，255：其他 */
    'cardType': number;
  }


  export interface UpdateFirstPageConfigRequest {
    /** 活动id */
    'activityId': string;
    /** 是否使用默认图片url */
    'isDefaultFirstPage'?: boolean;
    /** 首页图片地址 为空时表示设置为默认图片 */
    'firstPageUrl'?: string;
    /** 活动资格说明url,为空表示资格说明为空 */
    'qualificationsUrl'?: string;
    /** 活动详细说明url,为空表示详细说明为空 */
    'instructionsUrl'?: string;
    /** 公示标题 */
    'promulgateTitle'?: string;
    /** promulgateContentUrl 公示内容url */
    'promulgateContentUrl'?: string;
  }


  export interface UpdateInformationRequest {
    /** 客户ID */
    'customerId': string;
    /** 资料项 */
    'data': trade_yxdj_proto.InformationGroupData;
  }


  export interface UpdateLibraryOptionRequest {
    /** 选项库选项id */
    'libraryOptionId': string;
    /** 选项 */
    'option': trade_yxdj_proto.LibraryOption;
  }


  export interface UpdateMasterDescriptionRequest {
    /** 活动id */
    'activityId': string;
    /** 主购房人描述 */
    'masterDescription'?: string;
  }


  export interface UpdateOptionGroupRequest {
    /** 选项分组ID */
    'optionGroupId': string;
    /** 添加分组名称 */
    'name': string;
  }


  export interface UpdateOptionRequest {
    /** 选项ID */
    'optionId': string;
    /** 分组ID */
    'optionGroupId': string;
    /** 选项 */
    'option': trade_yxdj_proto.Option;
  }


  export interface UpdateSalespersonInfoRequest {
    /** 活动id */
    'activityId': string;
  }


  export interface UpdateStakeholderConfigRequest {
    /** 活动id */
    'activityId': string;
    /** 联名购房人描述 */
    'stakeholderDescription'?: string;
    /** 最大联名购房人数量 */
    'maxStakeholderCount': number;
  }


  export interface VerifyCaptchaRequest {
    /** 短信验证码 */
    'captcha': string;
    /** 手机号码 */
    'mobile': string;
  }


  export interface YKCustomer {
    /** 云客后台用户 */
    'ykCustomerId'?: string;
    /** 审核人员名称 */
    'name'?: string;
    /** 手机号 */
    'mobile'?: string;
    /** 登录账号 */
    'loginAccount'?: string;
  }


}
